using System;
using System.Collections.Generic;
using System.Text;

namespace C_Sharp_Practice
{
    class BaseClass
    {
        private void foo()
        {
            Console.WriteLine("Can't touch this.");
        }

        public void goo()
        {
            Console.WriteLine("Can't touch this.");
        }
    }

    class DerivedClass: BaseClass
    {
        // The derived class cannot find the fn b/c it is marked as private in the base class
        //public new void foo()
        //{
        //    Console.WriteLine("Can touch this.");
        //}

        // The derived class cannot override the fn b/c it is NOT marked as abstract, virtual, or override in the base class
        //public new void foo()
        //{
        //    Console.WriteLine("Can touch this.");
        //}
    }

    class Problem_3_0
    {

        public static void Problem_3_0_Main()
        {
        }
    }
}
